//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FoodIsMedicine
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FYPEntities : DbContext
    {
        public FYPEntities()
            : base("name=FYPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAdmin> tblAdmins { get; set; }
        public virtual DbSet<tblDiseas> tblDiseases { get; set; }
        public virtual DbSet<tblUser> tblUsers { get; set; }
    
        public virtual int activateUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("activateUser", userIdParameter);
        }
    
        public virtual ObjectResult<adminLogin_Result> adminLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<adminLogin_Result>("adminLogin", emailParameter, passwordParameter);
        }
    
        public virtual int blockUser(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("blockUser", userIdParameter);
        }
    
        public virtual ObjectResult<checkAdminEmail_Result> checkAdminEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkAdminEmail_Result>("checkAdminEmail", emailParameter);
        }
    
        public virtual ObjectResult<checkEmail_Result> checkEmail(string email, string userType)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkEmail_Result>("checkEmail", emailParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<checkEmailAdd_Result> checkEmailAdd(string email, string userType)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkEmailAdd_Result>("checkEmailAdd", emailParameter, userTypeParameter);
        }
    
        public virtual int deleteAdmin(Nullable<int> adminID)
        {
            var adminIDParameter = adminID.HasValue ?
                new ObjectParameter("adminID", adminID) :
                new ObjectParameter("adminID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteAdmin", adminIDParameter);
        }
    
        public virtual int deleteDisease(Nullable<int> diseaseID)
        {
            var diseaseIDParameter = diseaseID.HasValue ?
                new ObjectParameter("diseaseID", diseaseID) :
                new ObjectParameter("diseaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteDisease", diseaseIDParameter);
        }
    
        public virtual ObjectResult<string> emailchecker(string email, string userType)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("userType", userType) :
                new ObjectParameter("userType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("emailchecker", emailParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<listAdmins_Result> listAdmins()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listAdmins_Result>("listAdmins");
        }
    
        public virtual ObjectResult<listDiseases_Result> listDiseases()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listDiseases_Result>("listDiseases");
        }
    
        public virtual ObjectResult<listUsers_Result> listUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listUsers_Result>("listUsers");
        }
    
        public virtual ObjectResult<UserLogin_Result> UserLogin(string name, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLogin_Result>("UserLogin", nameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<userLoginPro_Result> userLoginPro(string name, string password)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<userLoginPro_Result>("userLoginPro", nameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<getDiseases_Result> getDiseases()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDiseases_Result>("getDiseases");
        }
    }
}
